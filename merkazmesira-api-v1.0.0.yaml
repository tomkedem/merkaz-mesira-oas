openapi: 3.0.1
info:
  title: API providing data for merkazmesira-client-application
  version: 1.0.0
  description: API providing data for merkazmesira-client-application. In this version, validation and required fields of the schemas, as well as securityDefenition and authentication are not supported.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://post-mesira-api-dev.azurewebsites.net
    description: Api for merkazmesira-client-application (dev branch) on Azure
  - url: http://localhost:7274
    description: Local development environment (for testing only)

tags:
  - name: Login
    description: "Endpoints related to user authentication and login"
  - name: KabalatSakim
    description: "Endpoints for managing Kabalat Sakim operations"
  - name: Chatima
    description: "Endpoints for handling Chatima-related operations"
  - name: DeliveryStatus
    description: provide demo data for merkazmesira 
     
  
paths:
  /users/details:
    post:
      summary: Retrieve user details
      tags: [Login]
      operationId: GetUserDetails      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailsRequest'
              

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /sakim/load:
    post:
      summary: Load Sakim data
      tags: [KabalatSakim]
      operationId: LoadSakimForHalima
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadSakimRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadSakimResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /barcod/insert:
    post:
      summary: Search barcode information
      tags: [KabalatSakim]
      operationId: InsertBarcode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertBarcodeRequest'
      responses:
        '201':
          description: Barcode inserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertBarcodeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /delivery/statuses:
    post:
      summary: Retrieve delivery status list
      tags: [DeliveryStatus]
      operationId: GetDeliveryStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryStatusListRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryStatusListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /barcodes/chatima:
    post:
      summary: Insert barcode with signature details
      tags: [Chatima]
      operationId: InsertBarcodeChatima
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertBarcodeChatimaRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertBarcodeChatimaResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
          
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT      
  responses:
    BadRequest:
      description: Bad request (invalid input)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized (missing or invalid authentication)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden (user lacks permissions)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        StatusCode:
          type: integer
          example: 400
          description: The HTTP status code associated with the error (e.g., 400, 401, 403, 500).
        ErrorID:
          type: string
          example: "E400"
          description: Unique identifier for the error, following standard error codes.
        ErrorDescription:
          type: string
          example: "Invalid input data"
          description: A brief, user-friendly description of the error.
        Details:
          type: string
          nullable: true
          example: "Missing required fields: UserID, Barcode"
          description: Additional details for debugging, included only when relevant.
        Timestamp:
          type: string
          format: date-time
          example: "2025-01-29T14:30:00Z"
          description: The exact UTC time when the error occurred.

    UserDetailsRequest:
      type: object
      properties:
        UserID:
          type: string
          example: "012345678"                
    UserDetailsResponse:
      type: object
      properties:
        UserDetailsResult:
          type: object
          properties:
            Name:
              type: string
              example: "משה כהן"
            SiteName:
              type: string
              example: "טסט אלף"
            SiteNumber:
              type: string
              example: "1000"
            SugAtar:
              type: integer
              example: 14
            UserGroup:
              type: string
              example: "16"
            UserGroupName:
              type: string
              example: "משתמש מרכז מסירה"
            UserID:
              type: string
              example: "012345678"
            ShouldDisplayKabalaScreen:
              type: boolean
              example: true
            ShouldPrintHodaotResult:
              type: boolean
              example: true        
    DeliveryStatusListRequest:
      type: object
      properties:
        UserID:
          type: string
          example: "012345678"
        SiteNumber:
          type: string
          example: "1000"
    DeliveryStatusListResponse:
      type: object
      properties:
        DeliveryStatuses:
          type: array
          items:
            type: object
            properties:
              kodPeula:
                type: number
                example: 1
              perutPeula:
                type: number
                example: 1
              teurPeula:
                type: string
                example: "נמסר לנמען"
              isDelivery:
                type: boolean  
                example: true
          example:
            - KodPeula: 1
              perutPeula: 1
              teurPeula: "נמסר לנמען"
            - KodPeula: 1
              perutPeula: 2
              teurPeula: "נמסר לנציג הנמען"
            - KodPeula: 1
              perutPeula: 3
              teurPeula: 'נמסר למיופ"כ מ-18'
            - KodPeula: 1
              perutPeula: 4
              teurPeula: 'נמסר למיופ"כ מ-16'
            - KodPeula: 1
              perutPeula: 5
              teurPeula: "נמסר חזרה לשולח"
            - KodPeula: 1
              perutPeula: 6
              teurPeula: "הודבקה על הדלת"
            - KodPeula: 1
              perutPeula: 7
              teurPeula: "הועבר למסירה באמצעות שליח"
            - KodPeula: 1
              perutPeula: 8
              teurPeula: "נמסר לשליח GETT"
            - KodPeula: 1
              perutPeula: 9
              teurPeula: "הונח בתיבה"        
            - KodPeula: 3
              perutPeula: 1
              teurPeula: "לא נדרש"
            - KodPeula: 3
              perutPeula: 2
              teurPeula: "סרב לקבל"
            - KodPeula: 3
              perutPeula: 3
              teurPeula: "עזב"
            - KodPeula: 3
              perutPeula: 4
              teurPeula: "תא דואר שגוי"
            - KodPeula: 3
              perutPeula: 5
              teurPeula: "לא ידוע בתא דואר"
            - KodPeula: 3
              perutPeula: 6
              teurPeula: "בבירור"
            - KodPeula: 3
              perutPeula: 7
              teurPeula: "הפנייה"
            - KodPeula: 3
              perutPeula: 8
              teurPeula: "ניתוב שגוי"
            - KodPeula: 3
              perutPeula: 9
              teurPeula: "פגום"
    
security:
  - bearerAuth: []  